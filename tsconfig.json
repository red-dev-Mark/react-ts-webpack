{
  "compilerOptions": {
    "target": "ES6", //ES6 문법을 사용합니다. 현대적이면서도 대부분의 브라우저와 호환됩니다.
    "lib": ["DOM", "DOM.Iterable", "ESNext"], //브라우저 DOM API와 최신 ECMAScript 기능을 사용할 수 있게 합니다.
    "module": "ESNext", //최신 모듈 시스템을 사용합니다. Webpack이 이를 처리할 수 있습니다.
    "moduleResolution": "node", //Node.js 스타일의 모듈 해결 방식을 사용합니다.
    "jsx": "react-jsx", //React 17 이상에서 권장되는 새로운 JSX 변환을 사용합니다.
    "strict": true, //모든 엄격한 타입-체킹 옵션을 활성화합니다. 이는 더 안전한 코드를 작성하는 데 도움이 됩니다.
    "esModuleInterop": true, //CommonJS 모듈을 ES6 모듈처럼 사용할 수 있게 해줍니다.
    "skipLibCheck": true, //선언 파일(*.d.ts)의 타입 체크를 건너뜁니다. 빌드 시간을 줄여줍니다.
    "forceConsistentCasingInFileNames": true, //파일 이름의 대소문자 일관성을 강제합니다.
    "allowJs": true, //JavaScript 파일도 프로젝트에 포함할 수 있게 합니다.
    "resolveJsonModule": true, //JSON 파일을 모듈로 가져올 수 있게 합니다.
    "isolatedModules": true, //각 파일을 별도의 모듈로 처리합니다.
    "incremental": true, //증분 컴파일을 활성화하여 재컴파일 속도를 높입니다.
    "noEmit": true, //TypeScript가 출력 파일을 생성하지 않도록 합니다. Webpack이 이를 처리할 것입니다.
    "allowImportingTsExtensions": true //이거 없으면 .tsx로 import가 안됨
    //.ts, .tsx, .js, .jsx 등의 파일 확장자를 명시적으로 import 문에 포함할 수 있게 해줍니다.
  },
  "include": ["src"], //src 폴더 내의 모든 파일을 컴파일 대상으로 포함합니다.
  "exclude": ["node_modules"] //node_modules 폴더를 컴파일 대상에서 제외합니다.
}
